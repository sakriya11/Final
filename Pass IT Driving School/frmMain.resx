<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tPgX6KuKHSRpnycAAAAASUVORK5CYII=
</value>
  </data>
</root>